name: Elixir CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    services:
      db:
        image: postgres:11
        ports: ['5432:5432']
        env:
          POSTGRES_USER: memento
          POSTGRES_PASSWORD: password
          POSTGRES_HOSTNAME: localhost
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    runs-on: ubuntu-latest

    strategy:
      matrix:
        elixir: [1.10.3]
        otp: [22.3.4]

    steps:
    - uses: actions/checkout@v2

    - name: Setup elixir
      uses: actions/setup-elixir@v1
      with:
        elixir-version: ${{ matrix.elixir }} # Define the elixir version [required]
        otp-version: ${{ matrix.otp }}

    - name: Retrieve Mix Dependencies Cache
      uses: actions/cache@v1
      id: mix-cache
      with:
        path: deps
        key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

    - name: Install Dependencies
      if: steps.mix-cache.outputs.cache-hit != 'true'
      run: |
        mix local.rebar --force
        mix local.hex --force
        mix deps.get

    - name: Check Formatting
      run: mix format --check-formatted

    - name: Run Tests
      run: mix test
      env:
        CI: "true"
        POSTGRES_USER: memento
        POSTGRES_PASSWORD: password
        POSTGRES_HOSTNAME: localhost
        TWITTER_CONSUMER_KEY: ${{ secrets.TWITTER_CONSUMER_KEY }}
        TWITTER_CONSUMER_SECRET: ${{ secrets.TWITTER_CONSUMER_SECRET }}

    - name: Retrieve PLT Cache
      uses: actions/cache@v1
      id: plt-cache
      with:
        path: priv/plts
        key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-plts-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

    - name: Create PLTs
      if: steps.plt-cache.outputs.cache-hit != 'true'
      run: |
        mkdir -p priv/plts
        mix dialyzer --plt

    - name: Run dialyzer
      run: mix dialyzer --no-check --halt-exit-status
